[env]
platform = espressif32 @ ^6.3.2
framework = arduino, espidf

monitor_filters = esp32_exception_decoder, direct
monitor_speed = 115200

upload_speed = 921600
upload_protocol = esptool
debug_tool = esp-builtin
debug_speed = 25000

build_type = debug 
build_flags =
    -DCORE_DEBUG_LEVEL=0

[ccflags]
build_flags =
    -O0 -ggdb -g
    -Wdouble-promotion -Wfloat-conversion -fdata-sections -ffunction-sections
    -Wdouble-promotion             ; double to float warnings
    -Wimplicit-fallthrough         ; switch case without berak

[ccflags_s3]
build_flags =
    -mfix-esp32-psram-cache-issue
	-mtext-section-literals  


[ccflags_c3]
build_flags =

[battery]
build_flags =
    -DBATTERY_UPDATE_SEC=1

[ble]
build_flags =
    -DMANUFACTURER_ID=0x4711
    -DBLE_NAME=\"FlowSensor\"
    -DUPDATE_MS=100
    -DIDLE_UPDATE_MS=1000
    -DCONFIG_NIMBLE_CPP_DEBUG_LEVEL=0
        
[quadrature]
build_flags =
    -DQUADRATURE_DECODER

[counter]
build_flags =
    -DFLOWSENSOR

[lvgl_ui]
build_flags =
    -DLV_CONF_PATH='${platformio.src_dir}/lv_conf.h'
    ; 
lib_deps =  
    lvgl/lvgl@^8.3.7

[headless]
build_flags =
    -DUI_FONT_FONT1=0
    -DUI_FONT_FONT2=0
    -D_SQUARELINE_PROJECT_UI_H

[m5stack_coreS3]
board = m5stack-coreS3-mah-fixed
lib_deps =  
    m5stack/M5Unified@^0.1.7
build_flags =
    -DPIN_FLOWSENSOR_A=17  ; Port-C (blue), instead of UART
    -DPIN_FLOWSENSOR_B=18  ; https://docs.m5stack.com/en/core/CoreS3
    -DM5UNIFIED
    -DLVGL_UI


[stamp_s3]
board = m5stack-stamps3
build_flags = 
    -DM5UNIFIED
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DPIN_FLOWSENSOR_A=1  ; https://docs.m5stack.com/en/core/StampS3
    -DPIN_FLOWSENSOR_B=2
lib_deps =  
    m5stack/M5Unified@^0.1.7

[stamp_c3]
board = m5stamp-c3-custom
build_flags = 
    -DM5UNIFIED
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DPIN_FLOWSENSOR_A=1  ; https://docs.m5stack.com/en/core/StampS3
    -DPIN_FLOWSENSOR_B=2
lib_deps =  
    m5stack/M5Unified@^0.1.7


[env:stamp_s3_counter]
extends = stamp_s3
build_flags = 
    ${stamp_s3.build_flags}
    ${ccflags.build_flags}
    ${ble.build_flags}
    ${counter.build_flags}
    ${lvgl_ui.build_flags}
lib_deps = 
    ${lvgl_ui.lib_deps}
    ${stamp_s3.lib_deps}


[env:stamp_s3_quadrature]
extends = stamp_s3
build_flags = 
    ${stamp_s3.build_flags}
    ${ccflags.build_flags}
    ${ccflags_s3.build_flags}
    ${ble.build_flags}
    ${quadrature.build_flags}
    ${lvgl_ui.build_flags}
lib_deps = 
    ${lvgl_ui.lib_deps}
    ${stamp_s3.lib_deps}

[env:m5stack_coreS3_quadrature]
extends =  m5stack_coreS3
build_flags = 
    ${m5stack_coreS3.build_flags}
    ${ccflags.build_flags}
    ${ccflags_s3.build_flags}
    ${ble.build_flags}
    ${quadrature.build_flags}
    ${lvgl_ui.build_flags}
lib_deps = 
    ${lvgl_ui.lib_deps}
    ${stamp_s3.lib_deps}


[env:m5stack_coreS3_counter]
extends =  m5stack_coreS3
build_flags = 
    ${m5stack_coreS3.build_flags}
    ${ccflags.build_flags}
    ${ccflags_s3.build_flags}
    ${ble.build_flags}
    ${counter.build_flags}
    ${lvgl_ui.build_flags}
lib_deps = 
    ${lvgl_ui.lib_deps}
    ${stamp_s3.lib_deps}

[env:stamp_c3_counter]
extends = stamp_c3
build_flags = 
    ${stamp_c3.build_flags}
    ${ccflags.build_flags}
    ${ble.build_flags}
    ${counter.build_flags}
    ${lvgl_ui.build_flags}
lib_deps = 
    ${lvgl_ui.lib_deps}
    ${stamp_c3.lib_deps}


[env:stamp_c3_quadrature]
extends = stamp_c3
build_flags = 
    ${stamp_c3.build_flags}
    ${ccflags.build_flags}
    ${ccflags_c3.build_flags}
    ${ble.build_flags}
    ${quadrature.build_flags}
    ${lvgl_ui.build_flags}
lib_deps = 
    ${lvgl_ui.lib_deps}
    ${stamp_c3.lib_deps}